// Enable conda
conda {
    enabled = true
    useMamba = true
    cacheDir = '/net/ostrom/data/bcc/charliew/.conda/pkgs'  // Update this path for your cluster
}

// Process configuration
process {
    // Use your existing NanoFilt environment
    withName: 'CHOPPER' {
        conda = '/net/ostrom/data/bcc/charliew/.conda/envs/NanoFilt'  // Path to your NanoFilt conda env
        cpus = 4
        memory = '8 GB'
    }
    
    withName: 'NANOPLOT' {
        conda = '/net/ostrom/data/bcc/charliew/.conda/envs/NanoFilt'  // Same environment
        cpus = 2
        memory = '4 GB'
    }
}

// Parameters
params {
    input_fastq = "all_sHF171.fastq"
    outdir = "results"
    
    // Size filtering parameters
    min_quality = 10
    size_ranges = [
        [min: 5000,  max: 19999, name: "5k_20k"],
        [min: 20000, max: 29999, name: "20k_30k"],
        [min: 30000, max: 39999, name: "30k_40k"],
        [min: 40000, max: 49999, name: "40k_50k"],
        [min: 50000, max: null,  name: "50k_Plus"]
    ]
}

// Execution reports
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline.html"
}
report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
}
trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace.txt"
}
dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_dag.svg"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']