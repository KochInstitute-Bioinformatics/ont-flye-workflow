// Enable conda
conda {
enabled = true
useMamba = true
cacheDir = '/net/ostrom/data/bcc/charliew/.conda/pkgs'  // Update this path for your cluster
}

// Process configuration
process {
// Use nf-core_v24 environment when possible
withName: 'CHOPPER' {
conda = '/net/ostrom/data/bcc/charliew/.conda/envs/NanoFilt'
cpus = 4
memory = '8 GB'
}
withName: 'NANOPLOT' {
conda = '/net/ostrom/data/bcc/charliew/.conda/envs/NanoFilt'
cpus = 2
memory = '4 GB'
}
withName: 'PARSE_NANOSTATS' {
conda = '/net/ostrom/data/bcc/charliew/.conda/envs/nf-core_v24'
cpus = 1
memory = '2 GB'
}
withName: 'FLYE' {
conda = '/net/ostrom/data/bcc/charliew/.conda/envs/flye_2.9.5'
cpus = 24
memory = '32 GB'
time = '12.h'  // Assembly can take a long time
}
withName: 'GATHER_ASSEMBLY_STATS' {
conda = '/net/ostrom/data/bcc/charliew/.conda/envs/nf-core_v24'
cpus = 1
memory = '2 GB'
}
withName: 'TRANSGENE_BLAST' {
    container = 'ncbi/blast:latest'
    cpus = 1
    memory = '2 GB'
}

// Parameters
params {
input_fastq = null
name = null          // Add this parameter
samples = null       // Add this parameter
outdir = "results"
genome_size = "10m"  // Add genome size parameter for Flye
// Size filtering parameters
min_quality = 10
size_ranges = [
// [min: 5000,  max: 19999, name: "5k_20k"],
// [min: 20000, max: 29999, name: "20k_30k"],
// [min: 30000, max: 39999, name: "30k_40k"],
// [min: 40000, max: 49999, name: "40k_50k"],
// [min: 10000, max: null,  name: "10k_Plus"],
// [min: 20000, max: null,  name: "20k_Plus"],
[min: 30000, max: null,  name: "30k_Plus"],
[min: 40000, max: null,  name: "40k_Plus"],
[min: 50000, max: null,  name: "50k_Plus"]
]
// Transgene library configuration
transgene_library = "${projectDir}/transgenes/transgene_library.csv"
transgene_dir = "${projectDir}/transgenes"
default_transgene = "A-vector_herceptin_pEY345"
// Optional: transgene for single sample mode
transgene = null
}

// Execution reports
timeline {
enabled = true
file = "${params.outdir}/pipeline_info/execution_timeline.html"
overwrite = true  // ADD THIS LINE
}
report {
enabled = true
file = "${params.outdir}/pipeline_info/execution_report.html"
overwrite = true  // ADD THIS LINE
}
trace {
enabled = true
file = "${params.outdir}/pipeline_info/execution_trace.txt"
overwrite = true  // ADD THIS LINE
}
dag {
enabled = true
file = "${params.outdir}/pipeline_info/pipeline_dag.svg"
overwrite = true  // ADD THIS LINE
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']