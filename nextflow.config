// Enable Singularity support
singularity {
    enabled = true
    autoMounts = true
    cacheDir = '/net/ostrom/data/bcc/charliew/.singularity_cache'  // Update this path as needed
}

// Enable conda for other processes
conda {
    enabled = true
    useMamba = true
    cacheDir = '/net/ostrom/data/bcc/charliew/.conda/pkgs'
}

// Process configuration
process {
    withName: 'CHOPPER' {
        conda = '/net/ostrom/data/bcc/charliew/.conda/envs/NanoFilt'
        cpus = 4
        memory = '8 GB'
    }
    
    withName: 'NANOPLOT' {
        conda = '/net/ostrom/data/bcc/charliew/.conda/envs/NanoFilt'
        cpus = 2
        memory = '4 GB'
    }
    
    withName: 'PARSE_NANOSTATS' {
        conda = '/net/ostrom/data/bcc/charliew/.conda/envs/nf-core_v24'
        cpus = 1
        memory = '2 GB'
    }
    
    withName: 'FLYE' {
        conda = '/net/ostrom/data/bcc/charliew/.conda/envs/flye_2.9.5'
        cpus = 24
        memory = '32 GB'
        time = '12.h'
    }
    
    withName: 'GATHER_ASSEMBLY_STATS' {
        conda = '/net/ostrom/data/bcc/charliew/.conda/envs/nf-core_v24'
        cpus = 1
        memory = '2 GB'
    }
    
    withName: 'TRANSGENE_BLAST' {
        container = 'ncbi/blast:latest'  // Keep the Docker container
        cpus = 2
        memory = '4 GB'
    }
}

// Rest of your config...
params {
    input_fastq = null
    name = null
    samples = null
    outdir = "results"
    genome_size = "10m"
    
    // Size filtering parameters
    min_quality = 10
    size_ranges = [
        [min: 30000, max: null,  name: "30k_Plus"],
        [min: 40000, max: null,  name: "40k_Plus"],
        [min: 50000, max: null,  name: "50k_Plus"]
    ]
    
    // Transgene library configuration
    transgene_library = "${projectDir}/transgenes/transgene_library.csv"
    transgene_dir = "${projectDir}/transgenes"
    default_transgene = "A-vector_herceptin_pEY345"
    
    // Optional: transgene for single sample mode
    transgene = null
}

// Execution reports
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline.html"
    overwrite = true
}

report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace.txt"
    overwrite = true
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_dag.svg"
    overwrite = true
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']